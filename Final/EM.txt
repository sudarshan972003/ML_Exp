import math

data = [2,7,1,9,4]
mu = [1,2]
mu1=[]
sigma=1

iteration=0

def expectation(data, mu, sigma):
  li1=[]
  li2=[]
  li_fin=[]
  for i in data:
    den=0
    num = math.exp((-1/2)*pow(sigma, 2)*pow((i-mu[0]), 2))
    for j in mu:
      den += math.exp((-1/2)*pow(sigma, 2)*pow((i-j), 2))
    li1.append(num/den)

  for i in li1:
    a=abs(i-1)
    li2.append(a)

  for i in range(len(li1)):
    li_fin.append([li1[i], li2[i]])
  return li_fin

def maximization(data, mu):

  for i in range(len(mu)):
    num = 0
    den = 0
    for j in range(len(data)):
      num = num + (data[j]*li_fin[j][i])
      den = den + li_fin[j][i]

    mu1.append(float("{:.2f}".format(num/den)))
  return mu1

while True:
  li_fin = expectation(data, mu, sigma)
  mu1 = maximization(data, mu)
  if mu!=mu1:
    mu = mu1.copy()
    print (li_fin)
    print (mu1)
    mu1.clear()
  else:
    print (li_fin)
    print (mu1)
    break